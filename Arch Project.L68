00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 16/04/2018 13:21:32

00001000                             1      org $1000
00001000                             2  
00001000                             3  *-------------------------------------------------------
00001000                             4  *Known bugs
00001000                             5  *-------------------------------------------------------
00001000                             6  *Temporary visual overload of the player stats does not affect actual values
00001000                             7  *Some messages just get a random d inserted in them here and there I have no clue why
00001000                             8  *If the player would be skilled enough he could exceed the max bounds of the variables but that invloves conquering more than 10 castles
00001000                             9  
00001000                            10  *-------------------------------------------------------
00001000                            11  *Validation values to be used, modify as needed
00001000                            12  *-------------------------------------------------------
00001000  =00000000                 13  exit                    EQU 0      used to exit assembly program
00001000  =00000001                 14  min_horses              EQU 1      min number of horses you must have or the else the game will be over
00001000  =00000014                 15  oats_per_gold           EQU 20     the amount of oats you get per gold coin
00001000  =00000014                 16  soldier_cost            EQU 20     the gold cost of one soldier
00001000  =00000014                 17  horse_cost              EQU 20     the gold cost of one horse
00001000  =0000000A                 18  stable_boy_cost         EQU 10     the gold coft of one stable boy
00001000  =0000012C                 19  starting_gold           EQU 300    the gold the player recives at the start of the game
00001000  =00000000                 20  min_input_value         EQU 0      the minimum number you can enter when you are buying/spending resources
00001000  =00000064                 21  max_input_value         EQU 100    the maximum number you can enter when you are buying/spending resources 
00001000  =00000014                 22  soldier_chance_high     EQU 20     the chance that the soldier might die while attacking(high)
00001000  =0000000F                 23  soldier_chance_medium   EQU 15     the chance that the soldier might die while attacking(medium)
00001000  =0000000A                 24  soldier_chance_low      EQU 10     the chance that the soldier might die while attacking(low)
00001000  =00000019                 25  horse_chance_high       EQU 25     the chance that the horse might die while attacking(high)
00001000  =00000014                 26  horse_chance_medium     EQU 20     the chance that the horse might die while attacking(medium)
00001000  =0000000F                 27  horse_chance_low        EQU 15     the chance that the horse might die while attacking(low)
00001000  =00000019                 28  plunder_chance          EQU 25     the chance the soldiers plunder some resources while plundering
00001000  =0000002D                 29  plunder_gold_range      EQU 45     the range of the gold that can be plundered
00001000  =00000064                 30  plunder_feed_range      EQU 100    the range of the feed that can be plundered
00001000  =00000019                 31  defender_chance_low     EQU 25     the chance that the defender might die while defending(low)
00001000  =00000032                 32  defender_chance_high    EQU 50     the chance that the defender might die while defending(high)
00001000  =00000032                 33  distance_multiplier     EQU 50     multiplier used on genrated distance to get nice value for travel cost
00001000  =00000064                 34  oats_per_fifty_km       EQU 100    the amount of oats used by the horses per 50 kilometers of travel
00001000  =00000032                 35  oats_per_siege_day      EQU 50     the amount of feed consumed by horses per day during the siege
00001000  =000001F4                 36  bonus_gold_for_castle   EQU 500    the gold recived for conquering a castle 
00001000  =000003E8                 37  score_for_castle        EQU 1000   the default score recived for taking over a castle
00001000                            38  
00001000                            39  *Start of Game
00001000                            40  start:
00001000  33FC 012C 00004CF8        41      move.w  #starting_gold,money    put starting gold into players gold
00001008  33FC 0001 00004D00        42      move.w  #1,difficulty_level     we set the difficulty level to level 1
00001010  4279 00004CF6             43      clr.w   horses_stored           set horses stored to 0
00001016  4279 00004CF0             44      clr.w   feed_stored             set feed stored to 0 
0000101C  4279 00004CF4             45      clr.w   stable_boys_stored      set stable boys stored to 0
00001022  4279 00004CF2             46      clr.w   soldiers_stored         set soldiers stored to 0
00001028  4279 00004CFC             47      clr.w   journey_cost            set the journey cost to 0
0000102E  4279 00004CFE             48      clr.w   score                   sets the score of the player to 0
00001034  47F8 4000                 49      lea     $4000,A3                assign address A3 to that memory location
00001038                            50      
00001038  6100 2092                 51      bsr     welcome         branch to the welcome subroutine
0000103C  6100 2076                 52      bsr     game            branch to the game subroutine
00001040  4EF8 1000                 53      jmp     start           
00001044                            54  *Game loop
00003000                            55      org     $3000           the rest of the program is to be located from 3000 onwards
00003000                            56  
00003000                            57  *-------------------------------------------------------
00003000                            58  *----------------Generate Castle North------------------
00003000                            59  *-------------------------------------------------------
00003000                            60  generate_castle_north:
00003000  33FC 0005 00004D0A        61      move.w  #5,random_number_max        max number of defenders that can be generated
00003008  6100 098E                 62      bsr     random_number_gen
0000300C  3839 00004D08             63      move.w  random_number,D4            the number
00003012  C8F9 00004D00             64      mulu    difficulty_level,D4         
00003018  33C4 00004D12             65      move.w  D4,castle_defenders_north
0000301E  33FC 0019 00004D0A        66      move.w  #25,random_number_max
00003026  6100 0970                 67      bsr     random_number_gen
0000302A  3839 00004D08             68      move.w  random_number,D4
00003030  C8F9 00004D00             69      mulu    difficulty_level,D4
00003036  33C4 00004D10             70      move.w  D4,castle_defence_north
0000303C  33FC 0003 00004D0A        71      move.w  #3,random_number_max
00003044  6100 0952                 72      bsr     random_number_gen
00003048  3839 00004D08             73      move.w  random_number,D4
0000304E  C8FC 0032                 74      mulu    #distance_multiplier,D4
00003052  33C4 00004D14             75      move.w  D4,castle_distance_north
00003058  4E75                      76      rts
0000305A                            77  *-------------------------------------------------------
0000305A                            78  *----------------Generate Castle East-------------------
0000305A                            79  *-------------------------------------------------------
0000305A                            80  generate_castle_east:
0000305A  33FC 0005 00004D0A        81      move.w  #5,random_number_max
00003062  6100 0934                 82      bsr     random_number_gen
00003066  3839 00004D08             83      move.w  random_number,D4
0000306C  C8F9 00004D00             84      mulu    difficulty_level,D4
00003072  33C4 00004D18             85      move.w  D4,castle_defenders_east
00003078  33FC 0019 00004D0A        86      move.w  #25,random_number_max
00003080  6100 0916                 87      bsr     random_number_gen
00003084  3839 00004D08             88      move.w  random_number,D4
0000308A  C8F9 00004D00             89      mulu    difficulty_level,D4
00003090  33C4 00004D16             90      move.w  D4,castle_defence_east
00003096  33FC 0003 00004D0A        91      move.w  #3,random_number_max
0000309E  6100 08F8                 92      bsr     random_number_gen
000030A2  3839 00004D08             93      move.w  random_number,D4
000030A8  C8FC 0032                 94      mulu    #distance_multiplier,D4
000030AC  33C4 00004D1A             95      move.w  D4,castle_distance_east
000030B2  4E75                      96      rts
000030B4                            97  *-------------------------------------------------------
000030B4                            98  *-------------------Game Subroutine---------------------
000030B4                            99  *-------------------------------------------------------
000030B4                           100  game:
000030B4  6100 FF4A                101      bsr     generate_castle_north
000030B8  61A0                     102      bsr     generate_castle_east
000030BA  6100 03B2                103      bsr     market          branch out to market subroutine
000030BE  6100 002A                104      bsr     castle_siege_intro
000030C2  4EF8 30B4                105      jmp     game
000030C6  4E75                     106      rts                     return from game: subroutine
000030C8                           107            
000030C8                           108  end:
000030C8  FFFF FFFF                109      simhalt
000030CC                           110  
000030CC                           111  *-------------------------------------------------------
000030CC                           112  *-------------------Welcome Subroutine------------------
000030CC                           113  *-------------------------------------------------------
000030CC                           114  welcome:
000030CC  6100 0BB2                115      bsr     endl            branch to endl subroutine
000030D0  43F9 00003D39            116      lea     welcome_msg,A1  assign message to address register A1
000030D6  103C 000E                117      move.b  #14,D0          move literal 14 to DO
000030DA  4E4F                     118      trap    #15             trap and interpret value in D0
000030DC  6100 0BA2                119      bsr     endl            branch to endl subroutine
000030E0  103C 0017                120      move.b  #23,D0          move literal 23 to DO
000030E4  7264                     121      move.l  #100,D1         delay amount
000030E6  4E4F                     122      trap    #15 
000030E8  4E75                     123      rts                     return from welcome: subroutine
000030EA                           124  
000030EA                           125  *-------------------------------------------------------
000030EA                           126  *------------------Castle Siege Routine-----------------
000030EA                           127  *-------------------------------------------------------
000030EA                           128  castle_siege_intro:
000030EA  0C79 0000 00004CF6       129      cmp     #0,horses_stored
000030F2  6700 0B58                130      beq     replay
000030F6  0C79 0000 00004CF2       131      cmp     #0,soldiers_stored
000030FE  6700 0B4C                132      beq     replay
00003102  33FC 0001 00004D06       133      move.w  #1,siege_current_day
0000310A                           134  castle_siege_day:
0000310A  4279 00004D0E            135      clr     total_plundered_feed
00003110  4279 00004D0C            136      clr     total_plundered_gold
00003116  4279 00004D1E            137      clr     soldiers_killed
0000311C  4279 00004D20            138      clr     horses_killed
00003122  4279 00004D22            139      clr     defenders_killed
00003128  4279 00004D24            140      clr     defence_destroyed
0000312E  6100 0B10                141      bsr     clear_screen
00003132  6100 0890                142      bsr     player_stats
00003136  6100 0AEA                143      bsr     decorate
0000313A  43F9 000046C9            144      lea     castle_siege_day_msg,A1
00003140  3239 00004D06            145      move.w  siege_current_day,D1
00003146  103C 0011                146      move.b  #17,D0
0000314A  4E4F                     147      trap    #15
0000314C  6100 0B32                148      bsr     endl
00003150  43F9 000046FC            149      lea     castle_defence_msg,A1
00003156  3239 00004D02            150      move.w  castle_defence_left,D1
0000315C  103C 0011                151      move.b  #17,D0
00003160  4E4F                     152      trap    #15
00003162  6100 0B1C                153      bsr     endl
00003166  43F9 00004726            154      lea     castle_defenders_msg,A1
0000316C  3239 00004D04            155      move.w  castle_defenders_left,D1
00003172  103C 0011                156      move.b  #17,D0
00003176  4E4F                     157      trap    #15
00003178  6100 0AA8                158      bsr     decorate
0000317C                           159  castle_siege_paths:
0000317C  43F9 0000475C            160      lea     castle_paths_msg,A1
00003182  103C 000E                161      move.b  #14,D0
00003186  4E4F                     162      trap    #15
00003188  103C 0004                163      move.b  #4,D0
0000318C  4E4F                     164      trap    #15
0000318E  B27C 0001                165      cmp     #1,D1
00003192  6700 0022                166      beq     castle_siege_charge
00003196  B27C 0002                167      cmp     #2,D1
0000319A  6700 006C                168      beq     castle_siege_flank
0000319E  B27C 0003                169      cmp     #3,D1
000031A2  6700 00B6                170      beq     castle_siege_plunder
000031A6                           171  castle_siege_path_invalid:
000031A6  43F9 00003C99            172      lea     error_msg,A1            load in the referance to the messege into A1
000031AC  103C 000E                173      move.b  #14,D0                  move in literal 14 to D0
000031B0  4E4F                     174      trap    #15                     interpret value in D0, which results in displaying what is in A1
000031B2  4EF8 317C                175      jmp     castle_siege_paths
000031B6                           176  castle_siege_charge:
000031B6  6100 0A88                177      bsr     clear_screen
000031BA  6100 0808                178      bsr     player_stats
000031BE  43F9 0000486B            179      lea     castle_charge_msg,A1
000031C4  103C 000E                180      move.b  #14,D0
000031C8  4E4F                     181      trap    #15
000031CA  103C 0004                182      move.b  #4,D0
000031CE  4E4F                     183      trap    #15
000031D0  B27C 0000                184      cmp     #min_input_value,D1
000031D4  6700 FF34                185      beq     castle_siege_day
000031D8  6D00 0280                186      blt     castle_siege_boundry_error
000031DC  B27C 0064                187      cmp     #max_input_value,D1
000031E0  6E00 0278                188      bgt     castle_siege_boundry_error
000031E4  B279 00004CF2            189      cmp     soldiers_stored,D1
000031EA  6E00 0252                190      bgt     castle_siege_not_enough_knights
000031EE  B279 00004CF6            191      cmp     horses_stored,D1
000031F4  6E00 022C                192      bgt     castle_siege_not_enough_horses
000031F8  33C1 00004D1C            193      move.w  D1,units_attacking
000031FE  6100 08D4                194      bsr     charge_loop
00003202  4EF9 000032F8            195      jmp     castle_siege_loss_gain    
00003208                           196  castle_siege_flank:
00003208  6100 0A36                197      bsr     clear_screen
0000320C  6100 07B6                198      bsr     player_stats
00003210  43F9 000048FB            199      lea     castle_flank_msg,A1
00003216  103C 000E                200      move.b  #14,D0
0000321A  4E4F                     201      trap    #15
0000321C  103C 0004                202      move.b  #4,D0
00003220  4E4F                     203      trap    #15
00003222  B27C 0000                204      cmp     #min_input_value,D1
00003226  6700 FEE2                205      beq     castle_siege_day
0000322A  6D00 022E                206      blt     castle_siege_boundry_error
0000322E  B27C 0064                207      cmp     #max_input_value,D1
00003232  6E00 0226                208      bgt     castle_siege_boundry_error
00003236  B279 00004CF2            209      cmp     soldiers_stored,D1
0000323C  6E00 0200                210      bgt     castle_siege_not_enough_knights
00003240  B279 00004CF6            211      cmp     horses_stored,D1
00003246  6E00 01DA                212      bgt     castle_siege_not_enough_horses
0000324A  33C1 00004D1C            213      move.w  D1,units_attacking
00003250  6100 07EE                214      bsr     flank_loop
00003254  4EF9 000032F8            215      jmp     castle_siege_loss_gain     
0000325A                           216  castle_siege_plunder:
0000325A  6100 09E4                217      bsr     clear_screen
0000325E  6100 0764                218      bsr     player_stats
00003262  43F9 0000498A            219      lea     castle_plunder_msg,A1
00003268  103C 000E                220      move.b  #14,D0
0000326C  4E4F                     221      trap    #15
0000326E  103C 0004                222      move.b  #4,D0
00003272  4E4F                     223      trap    #15
00003274  B27C 0000                224      cmp     #min_input_value,D1
00003278  6700 FE90                225      beq     castle_siege_day
0000327C  6D00 01DC                226      blt     castle_siege_boundry_error
00003280  B27C 0064                227      cmp     #max_input_value,D1
00003284  6E00 01D4                228      bgt     castle_siege_boundry_error
00003288  B279 00004CF2            229      cmp     soldiers_stored,D1
0000328E  6E00 01AE                230      bgt     castle_siege_not_enough_knights
00003292  B279 00004CF6            231      cmp     horses_stored,D1
00003298  6E00 0188                232      bgt     castle_siege_not_enough_horses
0000329C  33C1 00004D1C            233      move.w  D1,units_attacking
000032A2  6100 08C2                234      bsr     plunder_loop
000032A6  4EF9 000032F8            235      jmp     castle_siege_loss_gain    
000032AC                           236  castle_siege_victory:
000032AC  6100 0992                237      bsr     clear_screen
000032B0  6100 0970                238      bsr     decorate
000032B4  43F9 00004C0B            239      lea     castle_victory_msg,A1
000032BA  103C 000E                240      move.b  #14,D0
000032BE  4E4F                     241      trap    #15
000032C0  6100 0960                242      bsr     decorate
000032C4  103C 0017                243      move.b  #23,D0                  move literal 23 to DO
000032C8  223C 0000012C            244      move.l  #300,D1                 delay amount
000032CE  4E4F                     245      trap    #15
000032D0  383C 01F4                246      move.w  #bonus_gold_for_castle,D4
000032D4  C8F9 00004D00            247      mulu    difficulty_level,D4
000032DA  D979 00004CF8            248      add.w   D4,money
000032E0  3838 03E8                249      move.w  score_for_castle,D4
000032E4  88F9 00004D06            250      divu    siege_current_day,D4
000032EA  D979 00004CFE            251      add.w   D4,score      
000032F0  5279 00004D00            252      add.w   #1,difficulty_level
000032F6  4E75                     253      rts
000032F8                           254  castle_siege_loss_gain:
000032F8  6100 0946                255      bsr     clear_screen
000032FC  6100 0924                256      bsr     decorate
00003300  3839 00004D20            257      move.w  horses_killed,D4
00003306  B879 00004CF6            258      cmp     horses_stored,D4
0000330C  6C00 093E                259      bge     replay
00003310  9979 00004CF6            260      sub.w   D4,horses_stored
00003316  43F9 00004ABD            261      lea     killed_horses_msg,A1
0000331C  3239 00004D20            262      move.w  horses_killed,D1
00003322  103C 0011                263      move.b  #17,D0
00003326  4E4F                     264      trap    #15
00003328  6100 0956                265      bsr     endl
0000332C  3839 00004D1E            266      move.w  soldiers_killed,D4
00003332  B879 00004CF2            267      cmp     soldiers_stored,D4
00003338  6C00 0912                268      bge     replay
0000333C  9979 00004CF2            269      sub.w   D4,soldiers_stored
00003342  43F9 00004ACB            270      lea     killed_soldiers_msg,A1
00003348  3239 00004D1E            271      move.w  soldiers_killed,D1
0000334E  103C 0011                272      move.b  #17,D0
00003352  4E4F                     273      trap    #15
00003354  3839 00004D0E            274      move.w  total_plundered_feed,D4
0000335A  D979 00004CF0            275      add.w   D4,feed_stored
00003360  43F9 00004B1A            276      lea     feed_gained_msg,A1
00003366  3239 00004D0E            277      move.w  total_plundered_feed,D1
0000336C  103C 0011                278      move.b  #17,D0
00003370  4E4F                     279      trap    #15
00003372  3839 00004CF6            280      move.w  horses_stored,D4
00003378  C8FC 0032                281      mulu.w  #oats_per_siege_day,D4   Calucaltes the total feed cost for all the horses
0000337C  B879 00004CF0            282      cmp     feed_stored,D4
00003382  6C00 08C8                283      bge     replay
00003386  9979 00004CF0            284      sub.w   D4,feed_stored
0000338C  43F9 00004B2D            285      lea     feed_lost_msg,A1
00003392  3204                     286      move.w  D4,D1
00003394  103C 0011                287      move.b  #17,D0
00003398  4E4F                     288      trap    #15
0000339A  3839 00004D0C            289      move.w  total_plundered_gold,D4
000033A0  D979 00004CF8            290      add.w   D4,money
000033A6  43F9 00004B07            291      lea     gold_gained_msg,A1
000033AC  3239 00004D0C            292      move.w  total_plundered_gold,D1
000033B2  103C 0011                293      move.b  #17,D0
000033B6  4E4F                     294      trap    #15
000033B8  3839 00004D22            295      move.w  defenders_killed,D4
000033BE  B879 00004D04            296      cmp     castle_defenders_left,D4
000033C4  6C00 FEE6                297      bge     castle_siege_victory
000033C8  9979 00004D04            298      sub.w   D4,castle_defenders_left
000033CE  43F9 00004ADC            299      lea     killed_defenders_msg,A1
000033D4  3239 00004D1E            300      move.w  soldiers_killed,D1
000033DA  103C 0011                301      move.b  #17,D0
000033DE  4E4F                     302      trap    #15
000033E0  3839 00004D24            303      move.w  defence_destroyed,D4
000033E6  B879 00004D02            304      cmp     castle_defence_left,D4
000033EC  6C00 FEBE                305      bge     castle_siege_victory
000033F0  9979 00004D02            306      sub.w   D4,castle_defence_left
000033F6  43F9 00004AF1            307      lea     defence_destroyed_msg,A1
000033FC  3239 00004D24            308      move.w  defence_destroyed,D1
00003402  103C 0011                309      move.b  #17,D0
00003406  4E4F                     310      trap    #15
00003408  6100 0818                311      bsr     decorate
0000340C  103C 0017                312      move.b  #23,D0                  move literal 23 to DO
00003410  223C 000000C8            313      move.l  #200,D1                 delay amount
00003416  4E4F                     314      trap    #15
00003418  5279 00004D06            315      add.w   #1,siege_current_day
0000341E  4EF8 310A                316      jmp     castle_siege_day
00003422                           317  castle_siege_not_enough_horses:
00003422  6100 081C                318      bsr     clear_screen            branch out to clear_screen subroutine
00003426  43F9 00004A6A            319      lea     not_enough_horses_msg,A1
0000342C  103C 000E                320      move.b  #14,D0
00003430  4E4F                     321      trap    #15
00003432  103C 0017                322      move.b  #23,D0                  move literal 23 to DO
00003436  7264                     323      move.l  #100,D1                 delay amount
00003438  4E4F                     324      trap    #15
0000343A  4EF8 310A                325      jmp     castle_siege_day 
0000343E                           326  castle_siege_not_enough_knights:
0000343E  6100 0800                327      bsr     clear_screen            branch out to clear_screen subroutine
00003442  43F9 00004A93            328      lea     not_enough_knights_msg,A1
00003448  103C 000E                329      move.b  #14,D0
0000344C  4E4F                     330      trap    #15
0000344E  103C 0017                331      move.b  #23,D0                  move literal 23 to DO
00003452  7264                     332      move.l  #100,D1                 delay amount
00003454  4E4F                     333      trap    #15
00003456  4EF8 310A                334      jmp     castle_siege_day 
0000345A                           335  castle_siege_boundry_error:
0000345A  6100 07E4                336      bsr     clear_screen            branch out to clear_screen subroutine
0000345E  6100 04A2                337      bsr     exceeded_input_boundry
00003462  103C 0017                338      move.b  #23,D0                  move literal 23 to DO
00003466  7264                     339      move.l  #100,D1                 delay amount
00003468  4E4F                     340      trap    #15
0000346A  4EF8 310A                341      jmp     castle_siege_day 
0000346E                           342  
0000346E                           343  *-------------------------------------------------------
0000346E                           344  *--------------------------Market-----------------------
0000346E                           345  *-------------------------------------------------------
0000346E                           346  market:
0000346E  6100 07D0                347      bsr     clear_screen            branch out to clear_screen subroutine
00003472  6100 0550                348      bsr     player_stats            branch out to player_stats subroutine
00003476  6100 07AA                349      bsr     decorate                branch out to decorate subroutine
0000347A  43F9 00003DDB            350      lea     market_msg,A1           load in the referance to the messege into A1
00003480  103C 000E                351      move.b  #14,D0                  move in literal 14 to D0
00003484  4E4F                     352      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003486  6100 079A                353      bsr     decorate                branch out to decorate subroutine
0000348A                           354  market_path_options:
0000348A  43F9 00003EC0            355      lea     market_path_msg,A1      load in the referance to messege into A1
00003490  103C 000E                356      move.b  #14,D0                  move in literal 14 to D0
00003494  4E4F                     357      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003496  103C 0004                358      move.b  #4,D0                   move in literal 4 to D0
0000349A  4E4F                     359      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
0000349C  B27C 0001                360      cmp     #1,D1                   Compare literal 1 with conntents of D1
000034A0  6700 002A                361      beq     market_path_1           If result is they are equal go to market_path_1
000034A4  B27C 0002                362      cmp     #2,D1                   Compare literal 2 with conntents of D1
000034A8  6700 0028                363      beq     market_path_2           If result is they are equal go to market_path_2
000034AC  B27C 0003                364      cmp     #3,D1                   Compare literal 3 with conntents of D1
000034B0  6700 002E                365      beq     market_path_3           If result is they are equal go to market_path_3
000034B4  B27C 0004                366      cmp     #4,D1                   Compare literal 4 with conntents of D1
000034B8  6700 002C                367      beq     market_path_4           If result is they are equal go to market_path_4
000034BC                           368  market_path_invalid:
000034BC                           369      *Player did not choose any of the given options
000034BC  43F9 00003C99            370      lea     error_msg,A1            load in the referance to the messege into A1
000034C2  103C 000E                371      move.b  #14,D0                  move in literal 14 to D0
000034C6  4E4F                     372      trap    #15                     interpret value in D0, which results in displaying what is in A1
000034C8  4EF8 348A                373      jmp     market_path_options     tells the execution program to jump to market_path_options
000034CC                           374  market_path_1:
000034CC                           375      *Player choose to go to Farm
000034CC  4EF9 000034EC            376      jmp     farm                    tells the execution program to jump to farm
000034D2                           377  market_path_2:
000034D2                           378      *Player choose to go to Stables
000034D2  6100 076C                379      bsr     clear_screen            branch out to clear_screen subroutine
000034D6  6100 04EC                380      bsr     player_stats            branch out to player_stats subroutine
000034DA  4EF9 00003560            381      jmp     stables                 tells the execution program to jump to stables
000034E0                           382  market_path_3:
000034E0                           383      *Player choose to go to Armory
000034E0  4EF9 0000367C            384      jmp     armoury                 tells the execution program to jump to armoury
000034E6                           385  market_path_4:
000034E6                           386      *Player choose to Head Out
000034E6  4EF9 000036EE            387      jmp     head_out                tells the execution program to jump to head_out
000034EC                           388   
000034EC                           389  *-------------------------------------------------------
000034EC                           390  *--------------------------Farm-------------------------
000034EC                           391  *-------------------------------------------------------
000034EC                           392  farm:
000034EC  6100 0752                393      bsr     clear_screen            branch out to clear_screen subroutine
000034F0  6100 04D2                394      bsr     player_stats            branch out to player_stats subroutine
000034F4  6100 072C                395      bsr     decorate                branch out to decorate subroutine
000034F8  43F9 00003F0B            396      lea     farm_msg,A1             load in the referance to the messege into A1
000034FE  103C 000E                397      move.b  #14,D0                  move in literal 14 to D0
00003502  4E4F                     398      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003504  6100 071C                399      bsr     decorate                branch out to decorate subroutine
00003508                           400  farm_buy:
00003508  43F9 00004014            401      lea     farm_buy_msg,A1         load in the referance to the messege into A1
0000350E  103C 000E                402      move.b  #14,D0                  move in literal 14 to D0
00003512  4E4F                     403      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003514  103C 0004                404      move.b  #4,D0                   move in literal 4 to D0
00003518  4E4F                     405      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
0000351A  B27C 0000                406      cmp     #0,D1                   Compare literal 0 with conntents of D1
0000351E  6700 FF4E                407      beq     market
00003522  6D00 0034                408      blt     farm_out_of_range
00003526  B27C 0064                409      cmp     #max_input_value,D1
0000352A  6E00 002C                410      bgt     farm_out_of_range
0000352E  B279 00004CF8            411      cmp     money,D1
00003534  6F00 000A                412      ble     farm_success
00003538                           413  farm_error:
00003538  6100 03BA                414      bsr     not_enough_gold
0000353C  4EF8 3508                415      jmp     farm_buy
00003540                           416  farm_success:
00003540  3801                     417      move.w  D1,D4
00003542  C9FC 0014                418      muls.w  #oats_per_gold,D4
00003546  D979 00004CF0            419      add.w   D4,feed_stored
0000354C  4244                     420      clr     D4
0000354E  9379 00004CF8            421      sub.w   D1,money
00003554  4EF8 34EC                422      jmp     farm
00003558                           423  farm_out_of_range:
00003558                           424      *player entered a number out of range
00003558  6100 03A8                425      bsr     exceeded_input_boundry
0000355C  4EF8 3508                426      jmp     farm_buy
00003560                           427      
00003560                           428  *-------------------------------------------------------
00003560                           429  *-----------------------Stables-------------------------
00003560                           430  *-------------------------------------------------------    
00003560                           431  stables:
00003560  6100 06C0                432      bsr     decorate                branch out to decorate subroutine
00003564  43F9 00004067            433      lea     stable_msg,A1           load in the referance to the messege into A1
0000356A  103C 000E                434      move.b  #14,D0                  move in literal 14 to D0
0000356E  4E4F                     435      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003570  6100 06B0                436      bsr     decorate                branch out to decorate subroutine
00003574                           437  stables_path_options:
00003574  43F9 00004277            438      lea     stable_path_msg,A1      load in the referance to the messege into A1
0000357A  103C 000E                439      move.b  #14,D0                  move in literal 14 to D0
0000357E  4E4F                     440      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003580  103C 0004                441      move.b  #4,D0                   move in literal 4 to D0
00003584  4E4F                     442      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
00003586  B27C 0001                443      cmp     #1,D1                   Compare literal 1 with conntents of D1
0000358A  6700 0022                444      beq     stables_path_1          If result is they are equal go to stables_path_1 
0000358E  B27C 0002                445      cmp     #2,D1                   Compare literal 2 with conntents of D1
00003592  6700 006E                446      beq     stables_path_2          If result is they are equal go to stables_path_2 
00003596  B27C 0003                447      cmp     #3,D1                   Compare literal 3 with conntents of D1
0000359A  6700 00BC                448      beq     stables_path_3          If result is they are equal go to stables_path_3 
0000359E                           449  stables_invalid_path:
0000359E                           450      *player did not choose any of path options
0000359E  43F9 00003C99            451      lea     error_msg,A1            load in the referance to the messege into A1
000035A4  103C 000E                452      move.b  #14,D0                  move in literal 14 to D0
000035A8  4E4F                     453      trap    #15                     interpret value in D0, which results in displaying what is in A1
000035AA  4EF8 3574                454      jmp     stables_path_options
000035AE                           455  stables_path_1:
000035AE                           456      *player choose to buy horses
000035AE  6100 0690                457      bsr     clear_screen            branch out to clear_screen subroutine
000035B2  6100 0410                458      bsr     player_stats            branch out to player_stats subroutine
000035B6  43F9 0000415E            459      lea     stables_horse_msg,A1    load in the referance to the messege into A1
000035BC  103C 000E                460      move.b  #14,D0                  move in literal 14 to D0
000035C0  4E4F                     461      trap    #15                     interpret value in D0, which results in displaying what is in A1
000035C2  103C 0004                462      move.b  #4,D0                   move in literal 4 to D0
000035C6  4E4F                     463      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
000035C8  B27C 0000                464      cmp     #0,D1
000035CC  6792                     465      beq     stables
000035CE  6D00 009C                466      blt     stables_out_of_range
000035D2  B27C 0064                467      cmp     #max_input_value,D1
000035D6  6E00 0094                468      bgt     stables_out_of_range
000035DA  3801                     469      move.w  D1,D4
000035DC  C9FC 0014                470      muls.w  #horse_cost,D4          multipliy the horse cost by the number of horses we want to buy to get total cost
000035E0  B879 00004CF8            471      cmp     money,D4                
000035E6  6E00 0074                472      bgt     stables_invalid_gold
000035EA  D379 00004CF6            473      add.w   D1,horses_stored
000035F0  9979 00004CF8            474      sub.w   D4,money
000035F6  6100 0648                475      bsr     clear_screen            branch out to clear_screen subroutine
000035FA  6100 03C8                476      bsr     player_stats            branch out to player_stats subroutine
000035FE  4EF8 3560                477      jmp     stables   
00003602                           478  stables_path_2:
00003602                           479      *player choose to buy stable boys
00003602  6100 063C                480      bsr     clear_screen            branch out to clear_screen subroutine
00003606  6100 03BC                481      bsr     player_stats            branch out to player_stats subroutine
0000360A  43F9 000041E3            482      lea     stables_boy_msg,A1      load in the referance to the messege into A1
00003610  103C 000E                483      move.b  #14,D0                  move in literal 14 to D0
00003614  4E4F                     484      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003616  103C 0004                485      move.b  #4,D0                   move in literal 4 to D0
0000361A  4E4F                     486      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
0000361C  B27C 0000                487      cmp     #0,D1
00003620  6700 FF3E                488      beq     stables
00003624  6D00 0046                489      blt     stables_out_of_range
00003628  B27C 0064                490      cmp     #max_input_value,D1
0000362C  6E00 003E                491      bgt     stables_out_of_range
00003630  3801                     492      move.w  D1,D4
00003632  C9FC 000A                493      muls.w  #stable_boy_cost,D4     multipliy the stable boy cost by the number of stable boys we want to buy to get total cost
00003636  B879 00004CF8            494      cmp     money,D4   
0000363C  6E00 001E                495      bgt     stables_invalid_gold
00003640  D379 00004CF4            496      add.w   D1,stable_boys_stored
00003646  9979 00004CF8            497      sub.w   D4,money
0000364C  6100 05F2                498      bsr     clear_screen            branch out to clear_screen subroutine
00003650  6100 0372                499      bsr     player_stats            branch out to player_stats subroutine
00003654  4EF8 3560                500      jmp     stables 
00003658                           501  stables_path_3:
00003658                           502      *player choose to go back to the market
00003658  4EF8 346E                503      jmp     market
0000365C                           504  stables_invalid_gold: 
0000365C                           505      *player does not have enough gold to buy
0000365C  6100 05E2                506      bsr     clear_screen            branch out to clear_screen subroutine
00003660  6100 0362                507      bsr     player_stats            branch out to player_stats subroutine
00003664  6100 028E                508      bsr     not_enough_gold
00003668  4EF8 3560                509      jmp     stables
0000366C                           510  stables_out_of_range:
0000366C                           511      *player entered a number out of range
0000366C  6100 05D2                512      bsr     clear_screen            branch out to clear_screen subroutine
00003670  6100 0352                513      bsr     player_stats            branch out to player_stats subroutine
00003674  6100 028C                514      bsr     exceeded_input_boundry
00003678  4EF8 3560                515      jmp     stables
0000367C                           516      
0000367C                           517  *-------------------------------------------------------
0000367C                           518  *-----------------------Armoury-------------------------
0000367C                           519  *-------------------------------------------------------
0000367C                           520  armoury:
0000367C  6100 05C2                521      bsr     clear_screen            branch out to clear_screen subroutine
00003680  6100 0342                522      bsr     player_stats            branch out to player_stats subroutine
00003684  6100 059C                523      bsr     decorate                branch out to decorate subroutine
00003688  43F9 000042BE            524      lea     armoury_msg,A1          load in the referance to the messege into A1
0000368E  103C 000E                525      move.b  #14,D0                  move in literal 14 to D0
00003692  4E4F                     526      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003694  6100 058C                527      bsr     decorate                branch out to decorate subroutine
00003698                           528  armoury_buy:
00003698  43F9 000043AE            529      lea     armoury_buy_msg,A1
0000369E  103C 000E                530      move.b  #14,D0                  move in literal 14 to D0
000036A2  4E4F                     531      trap    #15                     interpret value in D0, which results in displaying what is in A1
000036A4  103C 0004                532      move.b  #4,D0                   move in literal 4 to D0
000036A8  4E4F                     533      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
000036AA  B27C 0000                534      cmp     #0,D1                   Compare literal 0 with conntents of D1
000036AE  6700 FDBE                535      beq     market
000036B2  6D00 0032                536      blt     armoury_out_of_range
000036B6  B27C 0064                537      cmp     #max_input_value,D1
000036BA  6E00 002A                538      bgt     armoury_out_of_range
000036BE  3801                     539      move.w  D1,D4
000036C0  C9FC 0014                540      muls.w  #soldier_cost,D4        multipliy the soldier cost by the number of soldiers we want to buy to get total cost
000036C4  B879 00004CF8            541      cmp     money,D4   
000036CA  6E00 0012                542      bgt     armoury_invalid_gold
000036CE  D379 00004CF2            543      add.w   D1,soldiers_stored
000036D4  9979 00004CF8            544      sub.w   D4,money
000036DA  4EF8 367C                545      jmp     armoury 
000036DE                           546  armoury_invalid_gold:
000036DE                           547      *Player does not have enough gold to buy
000036DE  6100 0214                548      bsr     not_enough_gold
000036E2  4EF8 3698                549      jmp     armoury_buy
000036E6                           550  armoury_out_of_range:
000036E6                           551      *player entered a number out of range
000036E6  6100 021A                552      bsr     exceeded_input_boundry
000036EA  4EF8 3698                553      jmp     armoury_buy
000036EE                           554      
000036EE                           555  *-------------------------------------------------------
000036EE                           556  *-----------------------Head Out------------------------
000036EE                           557  *-------------------------------------------------------
000036EE                           558  head_out:
000036EE  6100 0550                559      bsr     clear_screen            branch out to clear_screen subroutine
000036F2  6100 02D0                560      bsr     player_stats            branch out to player_stats subroutine
000036F6  6100 052A                561      bsr     decorate                branch out to decorate subroutine
000036FA  43F9 0000440C            562      lea     head_out_msg,A1         load in the referance to the messege into A1
00003700  103C 000E                563      move.b  #14,D0                  move in literal 14 to D0
00003704  4E4F                     564      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003706  6100 051A                565      bsr     decorate
0000370A                           566  head_out_paths:
0000370A  43F9 000044A7            567      lea     head_out_paths_msg,A1   load in the referance to the messege into A1
00003710  103C 000E                568      move.b  #14,D0                  move in literal 14 to D0
00003714  4E4F                     569      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003716  103C 0004                570      move.b  #4,D0                   move in literal 4 to D0
0000371A  4E4F                     571      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
0000371C  B27C 0001                572      cmp     #1,D1                   Compare literal 1 with conntents of D1
00003720  6700 0022                573      beq     head_out_path_1
00003724  B27C 0002                574      cmp     #2,D1                   Compare literal 2 with conntents of D1
00003728  6700 00F0                575      beq     head_out_path_2
0000372C  B27C 0003                576      cmp     #3,D1                   Compare literal 3 with conntents of D1
00003730  6700 01BE                577      beq     head_out_path_3
00003734                           578  head_out_path_invalid:
00003734                           579      *player did not choose any of path options
00003734  43F9 00003C99            580      lea     error_msg,A1            load in the referance to the messege into A1
0000373A  103C 000E                581      move.b  #14,D0                  move in literal 14 to D0
0000373E  4E4F                     582      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003740  4EF8 370A                583      jmp     head_out_paths
00003744                           584  head_out_path_1:
00003744                           585      *player decided to head out north
00003744  3839 00004D14            586      move.w  castle_distance_north,D4
0000374A  33C4 00004CFA            587      move.w  D4,distance_to_castle
00003750  3A39 00004D10            588      move.w  castle_defence_north,D5
00003756  33C5 00004D02            589      move.w  D5,castle_defence_left
0000375C  3C39 00004D12            590      move.w  castle_defenders_north,D6
00003762  33C6 00004D04            591      move.w  D6,castle_defenders_left   
00003768  6100 04D6                592      bsr     clear_screen            branch out to clear_screen subroutine
0000376C  6100 0256                593      bsr     player_stats            branch out to player_stats subroutine
00003770  6100 04B0                594      bsr     decorate                branch out to decorate subroutine
00003774  43F9 00004514            595      lea     head_out_north_msg,A1   load in the referance to the messege into A1
0000377A  103C 000E                596      move.b  #14,D0                  move in literal 14 to D0
0000377E  4E4F                     597      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003780  43F9 00004539            598      lea     head_out_distance_msg,A1
00003786  3239 00004CFA            599      move.w  distance_to_castle,D1
0000378C  103C 0011                600      move.b  #17,D0                  move literal 17 into D0
00003790  4E4F                     601      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
00003792  6100 04EC                602      bsr     endl                    branch out to endl subroutine
00003796  43F9 0000455A            603      lea     head_out_defence_msg,A1
0000379C  3239 00004D02            604      move.w  castle_defence_left,D1
000037A2  103C 0011                605      move.b  #17,D0                  move literal 17 into D0
000037A6  4E4F                     606      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
000037A8  6100 04D6                607      bsr     endl                    branch out to endl subroutine
000037AC  43F9 0000457A            608      lea     head_out_defenders_msg,A1
000037B2  3239 00004D04            609      move.w  castle_defenders_left,D1
000037B8  103C 0011                610      move.b  #17,D0                  move literal 17 into D0
000037BC  4E4F                     611      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
000037BE  6100 04C0                612      bsr     endl                    branch out to endl subroutine
000037C2  88FC 0032                613      divu    #distance_multiplier,D4
000037C6  C8FC 0064                614      mulu    #oats_per_fifty_km,D4
000037CA  C8F9 00004CF6            615      mulu    horses_stored,D4
000037D0  33C4 00004CFC            616      move.w  D4,journey_cost
000037D6  43F9 000045A6            617      lea     head_out_cost_msg,A1
000037DC  3239 00004CFC            618      move.w  journey_cost,D1         load in the referance to the messege into A1
000037E2  103C 0011                619      move.b  #17,D0                  move literal 17 into D0
000037E6  4E4F                     620      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
000037E8  6100 0438                621      bsr     decorate
000037EC  43F9 000045D3            622      lea     head_out_warning_msg,A1 load in the referance to the messege into A1
000037F2  103C 000E                623      move.b  #14,D0                  move in literal 14 to D0
000037F6  4E4F                     624      trap    #15                     interpret value in D0, which results in displaying what is in A1
000037F8  6100 0428                625      bsr     decorate                branch out to decorate subroutine
000037FC  43F9 00004690            626      lea     head_out_confirm_msg,A1 load in the referance to the messege into A1
00003802  103C 000E                627      move.b  #14,D0                  move in literal 14 to D0
00003806  4E4F                     628      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003808  103C 0004                629      move.b  #4,D0                   move in literal 4 to D0
0000380C  4E4F                     630      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
0000380E  B27C 0001                631      cmp     #1,D1                   Compare literal 1 with conntents of D1
00003812  6700 00FE                632      beq     journey_loss
00003816  4EF8 36EE                633      jmp     head_out
0000381A                           634  head_out_path_2:
0000381A                           635      *player decided to head out east
0000381A  3839 00004D1A            636      move.w  castle_distance_east,D4
00003820  33C4 00004CFA            637      move.w  D4,distance_to_castle
00003826  3A39 00004D16            638      move.w  castle_defence_east,D5
0000382C  33C5 00004D02            639      move.w  D5,castle_defence_left
00003832  3C39 00004D18            640      move.w  castle_defenders_east,D6
00003838  33C6 00004D04            641      move.w  D6,castle_defenders_left
0000383E  6100 0400                642      bsr     clear_screen            branch out to clear_screen subroutine
00003842  6100 0180                643      bsr     player_stats            branch out to player_stats subroutine
00003846  6100 03DA                644      bsr     decorate                branch out to decorate subroutine
0000384A  43F9 000044F0            645      lea     head_out_east_msg,A1    load in the referance to the messege into A1
00003850  103C 000E                646      move.b  #14,D0                  move in literal 14 to D0
00003854  4E4F                     647      trap    #15                     interpret value in D0, which results in displaying what is in A1
00003856  43F9 00004539            648      lea     head_out_distance_msg,A1
0000385C  3239 00004CFA            649      move.w  distance_to_castle,D1
00003862  103C 0011                650      move.b  #17,D0                  move literal 17 into D0
00003866  4E4F                     651      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
00003868  6100 0416                652      bsr     endl                    branch out to endl subroutine
0000386C  43F9 0000455A            653      lea     head_out_defence_msg,A1
00003872  3239 00004D02            654      move.w  castle_defence_left,D1
00003878  103C 0011                655      move.b  #17,D0                  move literal 17 into D0
0000387C  4E4F                     656      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
0000387E  6100 0400                657      bsr     endl                    branch out to endl subroutine
00003882  43F9 0000457A            658      lea     head_out_defenders_msg,A1
00003888  3239 00004D04            659      move.w  castle_defenders_left,D1
0000388E  103C 0011                660      move.b  #17,D0                  move literal 17 into D0
00003892  4E4F                     661      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
00003894  6100 03EA                662      bsr     endl                    branch out to endl subroutine
00003898  88FC 0032                663      divu    #distance_multiplier,D4
0000389C  C8FC 0064                664      mulu    #oats_per_fifty_km,D4
000038A0  C8F9 00004CF6            665      mulu    horses_stored,D4
000038A6  33C4 00004CFC            666      move.w  D4,journey_cost
000038AC  43F9 000045A6            667      lea     head_out_cost_msg,A1
000038B2  3239 00004CFC            668      move.w  journey_cost,D1         load in the referance to the messege into A1
000038B8  103C 0011                669      move.b  #17,D0                  move literal 17 into D0
000038BC  4E4F                     670      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
000038BE  6100 0362                671      bsr     decorate
000038C2  43F9 000045D3            672      lea     head_out_warning_msg,A1 load in the referance to the messege into A1
000038C8  103C 000E                673      move.b  #14,D0                  move in literal 14 to D0
000038CC  4E4F                     674      trap    #15                     interpret value in D0, which results in displaying what is in A1
000038CE  6100 0352                675      bsr     decorate                branch out to decorate subroutine
000038D2  43F9 00004690            676      lea     head_out_confirm_msg,A1 load in the referance to the messege into A1
000038D8  103C 000E                677      move.b  #14,D0                  move in literal 14 to D0
000038DC  4E4F                     678      trap    #15                     interpret value in D0, which results in displaying what is in A1
000038DE  103C 0004                679      move.b  #4,D0                   move in literal 4 to D0
000038E2  4E4F                     680      trap    #15                     interpret value in D0, which results in reading a number from the keyboard and storing it in D1
000038E4  B27C 0001                681      cmp     #1,D1                   Compare literal 1 with conntents of D1
000038E8  6700 0028                682      beq     journey_loss
000038EC  4EF8 36EE                683      jmp     head_out
000038F0                           684  head_out_path_3:
000038F0                           685      *player decided to head back to the market
000038F0  4EF8 346E                686      jmp     market
000038F4                           687  
000038F4                           688  *-------------------------------------------------------
000038F4                           689  *-------------------Not Enough gold---------------------
000038F4                           690  *-------------------------------------------------------
000038F4                           691  not_enough_gold:
000038F4  43F9 00004BC8            692      lea     not_enough_gold_msg,A1      load in the referance to the messege into A1
000038FA  103C 000E                693      move.b  #14,D0                      move in literal 14 to D0
000038FE  4E4F                     694      trap    #15                         interpret value in D0, which results in displaying what is in A1
00003900  4E75                     695      rts                                 return from not_enough_gold subrutine
00003902                           696      
00003902                           697  *-------------------------------------------------------
00003902                           698  *------Exceeded Buying/Resource Spending Boundry--------
00003902                           699  *-------------------------------------------------------
00003902                           700  exceeded_input_boundry:
00003902  4281                     701      clr.l   D1
00003904  43F9 00003CB7            702      lea     error_input_boundry_msg,A1  load in the referance to the messege into A1
0000390A  103C 000E                703      move.b  #14,D0                      move in literal 14 to D0
0000390E  4E4F                     704      trap    #15                         interpret value in D0, which results in displaying what is in A1
00003910  4E75                     705      rts                                 return from not_enough_gold subrutine
00003912                           706   
00003912                           707  *-------------------------------------------------------
00003912                           708  *-------------------Journey Loss------------------------
00003912                           709  *All resources lost upon takeing a journey are caculated here
00003912                           710  *-------------------------------------------------------
00003912                           711  journey_loss:
00003912  3A39 00004CFC            712      move.w     journey_cost,D5          move # in journey_cost to D5
00003918  BA79 00004CF0            713      cmp        feed_stored,D5           compare # in feed_stored with D5
0000391E  6E00 003E                714      bgt        journey_recalculate_1    if D5 is greater jump to journey_recalculate_1
00003922                           715  journey_continue_1:
00003922  3A39 00004CF6            716      move.w     horses_stored,D5         move # in horses_stored to D5 
00003928  BA79 00004CF4            717      cmp        stable_boys_stored,D5    compare # in stable_boys_stored with D5
0000392E  6E00 004E                718      bgt        journey_recalculate_2    if D5 is greater jump to journey_recalculate_2
00003932                           719  journey_continue_2:
00003932  3A39 00004CF6            720      move.w     horses_stored,D5         move # in horses_stored to D5
00003938  BA79 00004CF2            721      cmp        soldiers_stored,D5       compare # in soldiers_stored with D5
0000393E  6D00 004E                722      blt        journey_recalculate_3    if D5 is smaller jump to journey_recalculate_3
00003942                           723  journey_continue_3:
00003942  3C39 00004CFA            724      move.w     distance_to_castle,D6    move # in distance to D6
00003948  8CFC 0032                725      divu       #50,D6                   divide # in D6 by 50
0000394C  CCFC 0064                726      mulu       #100,D6                  multiplie # in D6 by 100
00003950  CCF9 00004CF6            727      mulu       horses_stored,D6         multiplie # in D6 by # in horses_stored to give us total feed cost for the journey
00003956  9D79 00004CF0            728      sub.w      D6,feed_stored           subtract the feed cost from feed stored
0000395C  4E75                     729      rts                                 return from this subroutine(Now jumps to where market was called)
0000395E                           730  journey_recalculate_1:
0000395E  3A39 00004CF0            731      move.w     feed_stored,D5           move # in feed_stored to D5 
00003964  3C39 00004CFA            732      move.w     distance_to_castle,D6    move # in distance to D6
0000396A  8CFC 0032                733      divu       #50,D6                   divide # in D6 by 50
0000396E  CCFC 0064                734      mulu       #100,D6                  multiplie # in D6 by 100
00003972  8AC6                     735      divu       D6,D5                    divide the # in D5 by D6
00003974  33C5 00004CF6            736      move.w     D5,horses_stored         move the # horses we can bring to horses_stored
0000397A  4EF8 3922                737      jmp        journey_continue_1
0000397E                           738  journey_recalculate_2:
0000397E  3C39 00004CF4            739      move.w     stable_boys_stored,D6    move # in feed_stored to D6
00003984  33C6 00004CF6            740      move.w     D6,horses_stored         set the number of horses we can bring to the number of stable hands we have
0000398A  4EF8 3932                741      jmp        journey_continue_2
0000398E                           742  journey_recalculate_3:
0000398E  33C5 00004CF2            743      move.w     D5,soldiers_stored       set the number of kinghts we can bring to the number of horses we have
00003994  4EF8 3942                744      jmp        journey_continue_3
00003998                           745  *-------------------------------------------------------
00003998                           746  *---------------Random Number Generator-----------------
00003998                           747  *-------------------------------------------------------
00003998                           748  random_number_gen:
00003998  103C 0008                749      move.b  #8,D0
0000399C  4E4F                     750      trap    #15
0000399E  C2BC 005FFFFF            751      and.l   #$5FFFFF,D1
000039A4  82F8 0064                752      divu    100,D1
000039A8  4841                     753      swap    D1
000039AA  5241                     754      add     #1,D1
000039AC  3401                     755      move.w  D1,D2
000039AE  84F9 00004D0A            756      divu    random_number_max,D2
000039B4  4842                     757      swap    D2
000039B6  5242                     758      add     #1,D2
000039B8  33C2 00004D08            759      move.w  D2,random_number
000039BE  4281                     760      clr.l   D1
000039C0  4282                     761      clr.l   D2
000039C2  4E75                     762      rts
000039C4                           763  *-------------------------------------------------------
000039C4                           764  *-----------------Display Player Stats------------------
000039C4                           765  *Show the number of soldiers and horses the player has
000039C4                           766  *along with the feed and the money the player has
000039C4                           767  *-------------------------------------------------------
000039C4                           768  player_stats:
000039C4                           769  
000039C4  6100 025C                770      bsr     decorate                branch out to decorate subroutine
000039C8  43F9 00004B49            771      lea     your_gold_msg,A1        move your gold message to A1
000039CE  3239 00004CF8            772      move.w  money,D1                move the money the player has into D1
000039D4  103C 0011                773      move.b  #17,D0                  move literal 17 into D0
000039D8  4E4F                     774      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
000039DA  6100 02A4                775      bsr     endl                    branch out to endl subroutine
000039DE  43F9 00004C2B            776      lea     horses_msg,A1           move horse message to A1
000039E4  3239 00004CF6            777      move.w  horses_stored,D1        move the amount of horses the player has into D1
000039EA  103C 0011                778      move.b  #17,D0                  move literal 17 into D0
000039EE  4E4F                     779      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
000039F0  6100 028E                780      bsr     endl                    branch out to endl subroutine
000039F4  43F9 00004B66            781      lea     your_feed_msg,A1
000039FA  3239 00004CF0            782      move.w  feed_stored,D1
00003A00  103C 0011                783      move.b  #17,D0                  move literal 17 into D0
00003A04  4E4F                     784      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
00003A06  6100 0278                785      bsr     endl                    branch out to endl subroutine
00003A0A  43F9 00004B83            786      lea     your_stable_boy_msg,A1
00003A10  3239 00004CF4            787      move.w  stable_boys_stored,D1
00003A16  103C 0011                788      move.b  #17,D0                  move literal 17 into D0
00003A1A  4E4F                     789      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1
00003A1C  6100 0262                790      bsr     endl                    branch out to endl subroutine       
00003A20  43F9 00004BA7            791      lea     your_soldier_msg,A1
00003A26  3239 00004CF2            792      move.w  soldiers_stored,D1
00003A2C  103C 0011                793      move.b  #17,D0                  move literal 17 into D0
00003A30  4E4F                     794      trap    #15                     interpret value in D0, which results in displaying what is in A1 and D1   
00003A32  6100 01EE                795      bsr     decorate                branch out to decorate subroutine
00003A36  103C 0017                796      move.b  #23,D0                  move literal 23 to DO
00003A3A  7264                     797      move.l  #100,D1                 delay amount
00003A3C  4E4F                     798      trap    #15
00003A3E  4E75                     799      rts
00003A40                           800  
00003A40                           801  *-------------------------------------------------------
00003A40                           802  *-----------------------Flank Loop----------------------
00003A40                           803  *-------------------------------------------------------
00003A40                           804  flank_loop:
00003A40  3C39 00004D1C            805      move.w  units_attacking,D6
00003A46  CCFC 0001                806      mulu.w  #1,D6
00003A4A  33C6 00004D24            807      move.w  D6,defence_destroyed
00003A50  3839 00004D1C            808      move.w  units_attacking,D4
00003A56                           809  flank_loop_next:
00003A56  33FC 0064 00004D0A       810      move.w  #100,random_number_max
00003A5E  6100 FF38                811      bsr     random_number_gen
00003A62  3A39 00004D08            812      move.w  random_number,D5
00003A68  BA7C 0032                813      cmp     #defender_chance_high,D5
00003A6C  6D00 0048                814      blt     flank_kill_defender
00003A70                           815  flank_loop_next2:    
00003A70  5344                     816      sub     #1,D4                                  decrement loop counter
00003A72  6600 0076                817      bne     charge_loop_next                       repeat until D0=0
00003A76  3839 00004D04            818      move.w  castle_defenders_left,D4
00003A7C                           819  flank_loop_next3:
00003A7C  33FC 0064 00004D0A       820      move.w  #100,random_number_max
00003A84  6100 FF12                821      bsr     random_number_gen
00003A88  3A39 00004D08            822      move.w  random_number,D5
00003A8E  BA7C 000F                823      cmp     #soldier_chance_medium,D5
00003A92  6D00 0036                824      blt     flank_kill_horse
00003A96                           825  flank_loop_next4:
00003A96  33FC 0064 00004D0A       826      move.w  #100,random_number_max
00003A9E  6100 FEF8                827      bsr     random_number_gen
00003AA2  3A39 00004D08            828      move.w  random_number,D5
00003AA8  BA7C 0014                829      cmp     #horse_chance_medium,D5
00003AAC  6D00 0012                830      blt     flank_kill_knight
00003AB0                           831  flank_loop_next5:
00003AB0  5344                     832      sub     #1,D4                                 decrement loop counter
00003AB2  66C8                     833      bne     flank_loop_next3                      repeat until D0=0
00003AB4  4E75                     834      rts
00003AB6                           835  flank_kill_defender:
00003AB6  5279 00004D22            836      add.w   #1,defenders_killed
00003ABC  4EF8 3A70                837      jmp     flank_loop_next2
00003AC0                           838  flank_kill_knight:
00003AC0  5279 00004D1E            839      add.w   #1,soldiers_killed
00003AC6  4EF8 3AB0                840      jmp     flank_loop_next5
00003ACA                           841  flank_kill_horse:
00003ACA  5279 00004D20            842      add.w   #1,horses_killed
00003AD0  4EF8 3A96                843      jmp     flank_loop_next4
00003AD4                           844  
00003AD4                           845  *-------------------------------------------------------
00003AD4                           846  *-----------------------Charge Loop---------------------
00003AD4                           847  *-------------------------------------------------------
00003AD4                           848  charge_loop:
00003AD4  3C39 00004D1C            849      move.w  units_attacking,D6
00003ADA  CCFC 0003                850      mulu.w  #3,D6
00003ADE  33C6 00004D24            851      move.w  D6,defence_destroyed
00003AE4  3839 00004D1C            852      move.w  units_attacking,D4
00003AEA                           853  charge_loop_next:
00003AEA  33FC 0064 00004D0A       854      move.w  #100,random_number_max
00003AF2  6100 FEA4                855      bsr     random_number_gen
00003AF6  3A39 00004D08            856      move.w  random_number,D5
00003AFC  BA7C 0019                857      cmp     #defender_chance_low,D5
00003B00  6D00 0046                858      blt     charge_kill_defender
00003B04                           859  charge_loop_next2:    
00003B04  5344                     860      sub     #1,D4                                  decrement loop counter
00003B06  66E2                     861      bne     charge_loop_next                       repeat until D0=0
00003B08  3839 00004D04            862      move.w  castle_defenders_left,D4
00003B0E                           863  charge_loop_next3:
00003B0E  33FC 0064 00004D0A       864      move.w  #100,random_number_max
00003B16  6100 FE80                865      bsr     random_number_gen
00003B1A  3A39 00004D08            866      move.w  random_number,D5
00003B20  BA7C 000A                867      cmp     #soldier_chance_low,D5
00003B24  6D00 0036                868      blt     charge_kill_horse
00003B28                           869  charge_loop_next4:
00003B28  33FC 0064 00004D0A       870      move.w  #100,random_number_max
00003B30  6100 FE66                871      bsr     random_number_gen
00003B34  3A39 00004D08            872      move.w  random_number,D5
00003B3A  BA7C 0019                873      cmp     #horse_chance_high,D5
00003B3E  6D00 0012                874      blt     charge_kill_knight
00003B42                           875  charge_loop_next5:
00003B42  5344                     876      sub     #1,D4                                  decrement loop counter
00003B44  66C8                     877      bne     charge_loop_next3                      repeat until D0=0
00003B46  4E75                     878      rts
00003B48                           879  charge_kill_defender:
00003B48  5279 00004D22            880      add.w   #1,defenders_killed
00003B4E  4EF8 3B04                881      jmp     charge_loop_next2
00003B52                           882  charge_kill_knight:
00003B52  5279 00004D1E            883      add.w   #1,soldiers_killed
00003B58  4EF8 3B42                884      jmp     charge_loop_next5
00003B5C                           885  charge_kill_horse:
00003B5C  5279 00004D20            886      add.w   #1,horses_killed
00003B62  4EF8 3B28                887      jmp     charge_loop_next4
00003B66                           888  *-------------------------------------------------------
00003B66                           889  *----------------------Plunder Loop---------------------
00003B66                           890  *-------------------------------------------------------
00003B66                           891  plunder_loop:
00003B66  3839 00004D1C            892      move.w  units_attacking,D4
00003B6C                           893  plunder_loop_next:
00003B6C  33FC 0064 00004D0A       894      move.w  #100,random_number_max
00003B74  6100 FE22                895      bsr     random_number_gen
00003B78  3A39 00004D08            896      move.w  random_number,D5
00003B7E  BA7C 0019                897      cmp.w   #plunder_chance,D5
00003B82  6D00 0046                898      blt     plunder_resource
00003B86                           899  plunder_loop_next2:    
00003B86  5344                     900      sub     #1,D4                                   decrement loop counter
00003B88  66E2                     901      bne     plunder_loop_next                       repeat until D0=0
00003B8A  3839 00004D04            902      move.w  castle_defenders_left,D4
00003B90                           903  plunder_loop_next3:
00003B90  33FC 0064 00004D0A       904      move.w  #100,random_number_max
00003B98  6100 FDFE                905      bsr     random_number_gen
00003B9C  3A39 00004D08            906      move.w  random_number,D5
00003BA2  BA7C 0014                907      cmp.w   #soldier_chance_high,D5
00003BA6  6D00 0052                908      blt     plunder_kill_knight
00003BAA                           909  plunder_loop_next4:
00003BAA  33FC 0064 00004D0A       910      move.w  #100,random_number_max
00003BB2  6100 FDE4                911      bsr     random_number_gen
00003BB6  3A39 00004D08            912      move.w  random_number,D5
00003BBC  BA7C 000F                913      cmp.w   #horse_chance_low,D5
00003BC0  6D00 0042                914      blt     plunder_kill_horse
00003BC4                           915  plunder_loop_next5:
00003BC4  5344                     916      sub.w   #1,D4                                   decrement loop counter
00003BC6  66C8                     917      bne     plunder_loop_next3                      repeat until D0=0
00003BC8  4E75                     918      rts
00003BCA                           919  plunder_resource:
00003BCA  33FC 0064 00004D0A       920      move.w  #plunder_feed_range,random_number_max
00003BD2  6100 FDC4                921      bsr     random_number_gen
00003BD6  33F9 00004D08 00004D0E   922      move.w  random_number,total_plundered_feed
00003BE0  33FC 002D 00004D0A       923      move.w  #plunder_gold_range,random_number_max
00003BE8  6100 FDAE                924      bsr     random_number_gen
00003BEC  33F9 00004D08 00004D0C   925      move.w  random_number,total_plundered_gold
00003BF6  4EF8 3B86                926      jmp     plunder_loop_next2
00003BFA                           927  plunder_kill_knight:
00003BFA  5279 00004D1E            928      add.w   #1,soldiers_killed
00003C00  4EF8 3BAA                929      jmp     plunder_loop_next4
00003C04                           930  plunder_kill_horse:
00003C04  5279 00004D20            931      add.w   #1,horses_killed
00003C0A  4EF8 3BC4                932      jmp     plunder_loop_next5
00003C0E                           933      
00003C0E                           934  *-------------------------------------------------------
00003C0E                           935  *--------------------------Loop-------------------------
00003C0E                           936  *-------------------------------------------------------
00003C0E                           937  loop:
00003C0E  163C 0005                938      move.b  #5, D3 loop counter D3=5
00003C12                           939  next:
00003C12  43F9 00004C87            940      lea     loop_msg,A1
00003C18  103C 000E                941      move.b  #14,D0
00003C1C  4E4F                     942      trap    #15
00003C1E  5343                     943      sub     #1,D3   decrement loop counter
00003C20  66F0                     944      bne     next    repeat until D0=0
00003C22                           945  
00003C22                           946  *-------------------------------------------------------
00003C22                           947  *------------------Screen Decoration--------------------
00003C22                           948  *-------------------------------------------------------
00003C22                           949  decorate:
00003C22  163C 0050                950      move.b  #80, D3
00003C26  6100 0058                951      bsr     endl
00003C2A                           952  out:
00003C2A  43F9 00004C87            953      lea     loop_msg,A1
00003C30  103C 000E                954      move.b  #14,D0
00003C34  4E4F                     955      trap    #15
00003C36  5343                     956      sub     #1,D3   decrement loop counter
00003C38  66F0                     957      bne     out     repeat until D0=0
00003C3A  6100 0044                958      bsr     endl
00003C3E  4E75                     959      rts
00003C40                           960      
00003C40                           961  clear_screen: 
00003C40  103C 000B                962      move.b  #11,D0      clear screen
00003C44  323C FF00                963      move.w  #$ff00,D1
00003C48  4E4F                     964      trap    #15
00003C4A  4E75                     965      rts
00003C4C                           966  *-------------------------------------------------------
00003C4C                           967  *------------------------Replay-------------------------
00003C4C                           968  *-------------------------------------------------------
00003C4C                           969  replay:
00003C4C  61F2                     970      bsr     clear_screen
00003C4E  43F9 00004CE0            971      lea     score_msg,A1
00003C54  3239 00004CFE            972      move.w  score,D1
00003C5A  103C 0011                973      move.b  #17,D0
00003C5E  4E4F                     974      trap    #15               
00003C60  6100 001E                975      bsr     endl
00003C64  43F9 00004C89            976      lea     replay_msg,A1
00003C6A  103C 000E                977      move.b  #14,D0
00003C6E  4E4F                     978      trap    #15
00003C70                           979      
00003C70  103C 0004                980      move.b  #4,D0
00003C74  4E4F                     981      trap    #15
00003C76                           982  
00003C76  B27C 0000                983      cmp     #exit,D1
00003C7A  6700 F44C                984      beq     end         if SR Z register contains 1 beq => Branch Equals
00003C7E  4E75                     985      rts
00003C80                           986  
00003C80                           987  endl:
00003C80  48E7 8040                988      movem.l D0/A1,-(A7)
00003C84  303C 000E                989      move    #14,D0
00003C88  43F9 00003C96            990      lea     crlf,A1
00003C8E  4E4F                     991      trap    #15
00003C90  4CDF 0201                992      movem.l (A7)+,D0/A1
00003C94  4E75                     993      rts
00003C96                           994      
00003C96                           995  *-------------------------------------------------------
00003C96                           996  *-------------------Data Delarations--------------------
00003C96                           997  *-------------------------------------------------------
00003C96                           998  
00003C96= 0D 0A 00                 999  crlf:                    dc.b    $0D,$0A,0
00003C99= 49 6E 76 61 6C 69 ...   1000  error_msg:               dc.b    'Invalid input try again... '
00003CB4= 0D 0A 00                1001                           dc.b    $0D,$0A,0
00003CB7= 54 68 65 20 6E 75 ...   1002  error_input_boundry_msg: dc.b    'The number you tried to enter is outside the bounds'
00003CEA= 0D 0A                   1003                           dc.b    $0D,$0A
00003CEC= 54 68 65 20 6E 75 ...   1004                           dc.b    'The number can only be between 0 and 100'
00003D14= 0D 0A                   1005                           dc.b    $0D,$0A
00003D16= 54 72 79 20 61 67 ...   1006                           dc.b    'Try again with a diffrent number'
00003D36= 0D 0A 00                1007                           dc.b    $0D,$0A,0
00003D39= 2A 2A 2A 2A 2A 2A ...   1008  welcome_msg:             dc.b    '************************************************************'
00003D75= 0D 0A                   1009                           dc.b    $0D,$0A
00003D77= 5A 6F 72 6B 51 75 ...   1010                           dc.b    'ZorkQuest: Assault on Egreth Castle'
00003D9A= 0D 0A                   1011                           dc.b    $0D,$0A
00003D9C= 2A 2A 2A 2A 2A 2A ...   1012                           dc.b    '************************************************************'
00003DD8= 0D 0A 00                1013                           dc.b    $0D,$0A,0
00003DDB= 59 6F 75 72 20 61 ...   1014  market_msg:              dc.b    'Your are in the MARKET...'
00003DF4= 0D 0A                   1015                           dc.b    $0D,$0A
00003DF6= 54 6F 20 62 75 79 ...   1016                           dc.b    'To buy feed go to the Farm'
00003E10= 0D 0A                   1017                           dc.b    $0D,$0A
00003E12= 54 6F 20 62 75 79 ...   1018                           dc.b    'To buy horses or stable boys go to the Stables'
00003E40= 0D 0A                   1019                           dc.b    $0D,$0A
00003E42= 54 6F 20 62 75 79 ...   1020                           dc.b    'To buy soldiers go to Armory'
00003E5E= 0D 0A                   1021                           dc.b    $0D,$0A
00003E60= 54 6F 20 61 74 74 ...   1022                           dc.b    'To attack a castle simply head out'
00003E82= 0D 0A                   1023                           dc.b    $0D,$0A
00003E84= 57 68 65 6E 20 79 ...   1024                           dc.b    'When you are BUYING the BIGGEST number you can enter is 100',0
00003EC0= 57 68 65 72 65 20 ...   1025  market_path_msg:         dc.b    'Where do you want to go to?'
00003EDB= 0D 0A                   1026                           dc.b    $0D,$0A
00003EDD= 46 61 72 6D 28 31 ...   1027                           dc.b    'Farm(1), Stables(2), Armory(3), Head Out(4): ',0
00003F0B= 59 6F 75 20 61 72 ...   1028  farm_msg:                dc.b    'You are in the FARM...'
00003F21= 0D 0A                   1029                           dc.b    $0D,$0A
00003F23= 46 6F 72 20 31 20 ...   1030                           dc.b    'For 1 gold you get 20 oats'
00003F3D= 0D 0A                   1031                           dc.b    $0D,$0A
00003F3F= 31 20 68 6F 72 73 ...   1032                           dc.b    '1 horse eats 100 oats per 50 meters of travel'
00003F6C= 0D 0A                   1033                           dc.b    $0D,$0A
00003F6E= 31 20 68 6F 72 73 ...   1034                           dc.b    '1 horse eats 50 oats per day during siege'
00003F97= 0D 0A                   1035                           dc.b    $0D,$0A
00003F99= 4F 61 74 73 20 61 ...   1036                           dc.b    'Oats are automaticly consumed if you run out of feed you, lose'
00003FD7= 0D 0A                   1037                           dc.b    $0D,$0A
00003FD9= 49 66 20 74 68 65 ...   1038                           dc.b    'If there is not enough oats for a horse the horse will die',0
00004014= 45 6E 74 65 72 20 ...   1039  farm_buy_msg:            dc.b    'Enter the amount of gold you want to spend'
0000403E= 0D 0A                   1040                           dc.b    $0D,$0A
00004040= 4F 72 20 74 79 70 ...   1041                           dc.b    'Or type in 0 to return to the Market: ',0
00004067= 59 6F 75 72 20 61 ...   1042  stable_msg:              dc.b    'Your are in the STABLES'
0000407E= 0D 0A                   1043                           dc.b    $0D,$0A
00004080= 45 61 63 68 20 68 ...   1044                           dc.b    'Each horse needs a stable boy to travel or it will be left behind'
000040C1= 0D 0A                   1045                           dc.b    $0D,$0A
000040C3= 45 61 63 68 20 68 ...   1046                           dc.b    'Each horse needs a knight to go into battle else it can not fight'
00004104= 0D 0A                   1047                           dc.b    $0D,$0A
00004106= 53 74 61 62 6C 65 ...   1048                           dc.b    'Stable boys are never lost'
00004120= 0D 0A                   1049                           dc.b    $0D,$0A
00004122= 49 66 20 79 6F 75 ...   1050                           dc.b    'If you dont have any horses in battlefield the game is over',0
0000415E= 59 6F 75 20 61 72 ...   1051  stables_horse_msg:       dc.b    'You are in the STABLES... buying horses...'
00004188= 0D 0A                   1052                           dc.b    $0D,$0A
0000418A= 45 61 63 68 20 68 ...   1053                           dc.b    'Each horse costs 20 gold'
000041A2= 0D 0A                   1054                           dc.b    $0D,$0A
000041A4= 54 79 70 65 20 69 ...   1055                           dc.b    'Type in how many horses you want to buy or type 0 to go back: ',0
000041E3= 59 6F 75 20 61 72 ...   1056  stables_boy_msg:         dc.b    'You are in the STABLES... buying stable boys...'
00004212= 0D 0A                   1057                           dc.b    $0D,$0A
00004214= 45 61 63 68 20 73 ...   1058                           dc.b    'Each stable boy costs 10 gold'
00004231= 0D 0A                   1059                           dc.b    $0D,$0A
00004233= 54 79 70 65 20 69 ...   1060                           dc.b    'Type in how many stable boys you want to buy or type 0 to go back: ',0
00004277= 54 6F 20 62 75 79 ...   1061  stable_path_msg:         dc.b    'To buy horses(1), to buy stable boys(2), to go back to the market(3): ',0
000042BE= 59 6F 75 20 61 72 ...   1062  armoury_msg:             dc.b    'You are in the ARMOURY...'
000042D7= 0D 0A                   1063                           dc.b    $0D,$0A
000042D9= 45 61 63 68 20 6B ...   1064                           dc.b    'Each knight needs a horse to go into battle or to travel to new mission'
00004320= 0D 0A                   1065                           dc.b    $0D,$0A
00004322= 49 66 20 61 20 6B ...   1066                           dc.b    'If a knight does not have a horse to travel the knight is lost'
00004360= 0D 0A                   1067                           dc.b    $0D,$0A
00004362= 49 66 20 79 6F 75 ...   1068                           dc.b    'If you run out of knights during battle you lose'
00004392= 0D 0A                   1069                           dc.b    $0D,$0A
00004394= 45 61 63 68 20 6B ...   1070                           dc.b    'Each knight costs 20 gold',0
000043AE= 45 6E 74 65 72 20 ...   1071  armoury_buy_msg:         dc.b    'Enter the amount of knights(soldiers) you want to buy'
000043E3= 0D 0A                   1072                           dc.b    $0D,$0A
000043E5= 4F 72 20 74 79 70 ...   1073                           dc.b    'Or type in 0 to return to the market: ',0
0000440C= 59 6F 75 20 61 72 ...   1074  head_out_msg:            dc.b    'You are heading out from the castle...'
00004432= 0D 0A                   1075                           dc.b    $0D,$0A
00004434= 4F 6E 63 65 20 79 ...   1076                           dc.b    'Once you head out you will not be able to come back here'
0000446C= 0D 0A                   1077                           dc.b    $0D,$0A
0000446E= 54 68 65 20 64 69 ...   1078                           dc.b    'The difficult of each castle you can head to is the same',0
000044A7= 54 6F 20 68 65 61 ...   1079  head_out_paths_msg:      dc.b    'To head out North(1), to head out East(2), to go back to the Market(3): ',0
000044F0= 59 6F 75 20 61 72 ...   1080  head_out_east_msg:       dc.b    'You are about to head out East...'
00004511= 0D 0A 00                1081                           dc.b    $0D,$0A,0 
00004514= 59 6F 75 20 61 72 ...   1082  head_out_north_msg:      dc.b    'You are about to head out North...'
00004536= 0D 0A 00                1083                           dc.b    $0D,$0A,0
00004539= 54 68 65 20 64 69 ...   1084  head_out_distance_msg:   dc.b    'The distance to that castle is: ',0
0000455A= 54 68 65 20 64 65 ...   1085  head_out_defence_msg:    dc.b    'The defence of that castle is: ',0
0000457A= 54 68 65 20 6E 75 ...   1086  head_out_defenders_msg:  dc.b    'The number of defenders the castle has is: ',0 
000045A6= 54 68 65 20 74 6F ...   1087  head_out_cost_msg:       dc.b    'The total feed cost for all your horses is: ',0
000045D3= 0D 0A                   1088  head_out_warning_msg:    dc.b    $0D,$0A
000045D5= 4D 61 6B 65 73 20 ...   1089                           dc.b    'Makes sure you have enough feed and stable boys for your horses'
00004614= 0D 0A                   1090                           dc.b    $0D,$0A
00004616= 49 66 20 79 6F 75 ...   1091                           dc.b    'If you head out with 0 horses or knights this will result in game over'
0000465C= 0D 0A                   1092                           dc.b    $0D,$0A
0000465E= 4D 61 6B 65 20 73 ...   1093                           dc.b    'Make sure you have enough horses for your knights',0
00004690= 54 79 70 65 20 69 ...   1094  head_out_confirm_msg:    dc.b    'Type in 1 to confirm type in any thing else to go back: ',0
000046C9= 59 6F 75 20 61 72 ...   1095  castle_siege_day_msg:    dc.b    'You are laying siege to this castle... it is day: ',0
000046FC= 54 68 65 20 72 65 ...   1096  castle_defence_msg:      dc.b    'The remaining defence of this castle is: ',0
00004726= 54 68 65 20 6E 75 ...   1097  castle_defenders_msg:    dc.b    'The number of remaining defenders in this castle is: ',0
0000475C= 54 68 65 20 63 61 ...   1098  castle_paths_msg:        dc.b    'The castle will fall if it has no more defence or defenders...'
0000479A= 0D 0A                   1099                           dc.b    $0D,$0A
0000479C= 45 6E 74 65 72 20 ...   1100                           dc.b    'Enter 1 to carry out a charge attack (strong vs defence)'
000047D4= 0D 0A                   1101                           dc.b    $0D,$0A
000047D6= 45 6E 74 65 72 20 ...   1102                           dc.b    'Enter 2 to carry out a flank attack (strong vs defenders)'
0000480F= 0D 0A                   1103                           dc.b    $0D,$0A
00004811= 45 6E 74 65 72 20 ...   1104                           dc.b    'Enter 3 to plunder the nearby area around the castle (deals no damge)'
00004856= 0D 0A                   1105                           dc.b    $0D,$0A
00004858= 45 6E 74 65 72 20 ...   1106                           dc.b    'Enter your order: ',0
0000486B= 59 6F 75 20 61 72 ...   1107  castle_charge_msg:       dc.b    'You are about to order your knights to charge attack...'
000048A2= 0D 0A                   1108                           dc.b    $0D,$0A
000048A4= 45 6E 74 65 72 20 ...   1109                           dc.b    'Enter the number of knights you want to send out to battle'
000048DE= 0D 0A                   1110                           dc.b    $0D,$0A
000048E0= 4F 72 20 65 6E 74 ...   1111                           dc.b    'Or enter in 0 to go back: ',0
000048FB= 59 6F 75 20 61 72 ...   1112  castle_flank_msg:        dc.b    'You are about to order your knights to flank attack...'
00004931= 0D 0A                   1113                           dc.b    $0D,$0A
00004933= 45 6E 74 65 72 20 ...   1114                           dc.b    'Enter the number of knights you want to send out to battle'
0000496D= 0D 0A                   1115                           dc.b    $0D,$0A
0000496F= 4F 72 20 65 6E 74 ...   1116                           dc.b    'Or enter in 0 to go back: ',0
0000498A= 59 6F 75 20 61 72 ...   1117  castle_plunder_msg:      dc.b    'You are about to order your knights to plunder the area...'
000049C4= 0D 0A                   1118                           dc.b    $0D,$0A
000049C6= 54 68 69 73 20 63 ...   1119                           dc.b    'This can get you extra feed and gold'
000049EA= 0D 0A                   1120                           dc.b    $0D,$0A
000049EC= 59 6F 75 72 20 68 ...   1121                           dc.b    'Your horses and knights can still die'
00004A11= 0D 0A                   1122                           dc.b    $0D,$0A
00004A13= 45 6E 74 65 72 20 ...   1123                           dc.b    'Enter the number of knights you want to send out to battle'
00004A4D= 0D 0A                   1124                           dc.b    $0D,$0A
00004A4F= 4F 72 20 65 6E 74 ...   1125                           dc.b    'Or enter in 0 to go back: ',0
00004A6A= 59 6F 75 20 64 6F ...   1126  not_enough_horses_msg:   dc.b    'You do not have enough horses to do that',0
00004A93= 59 6F 75 20 64 6F ...   1127  not_enough_knights_msg:  dc.b    'You do not have enough knights to do that',0
00004ABD= 48 6F 72 73 65 73 ...   1128  killed_horses_msg:       dc.b    'Horses lost: ',0
00004ACB= 0D 0A                   1129  killed_soldiers_msg:     dc.b    $0D,$0A
00004ACD= 4B 6E 69 67 68 74 ...   1130                           dc.b    'Knights lost: ',0
00004ADC= 0D 0A                   1131  killed_defenders_msg:    dc.b    $0D,$0A
00004ADE= 44 65 66 65 6E 64 ...   1132                           dc.b    'Defenders killed: ',0
00004AF1= 0D 0A                   1133  defence_destroyed_msg:   dc.b    $0D,$0A
00004AF3= 44 65 66 65 6E 63 ...   1134                           dc.b    'Defence destroyed: ',0
00004B07= 0D 0A                   1135  gold_gained_msg:         dc.b    $0D,$0A
00004B09= 47 6F 6C 64 20 70 ...   1136                           dc.b    'Gold plundered: ',0
00004B1A= 0D 0A                   1137  feed_gained_msg:         dc.b    $0D,$0A
00004B1C= 46 65 65 64 20 70 ...   1138                           dc.b    'Feed plundered: ',0   
00004B2D= 0D 0A                   1139  feed_lost_msg:           dc.b    $0D,$0A
00004B2F= 46 65 65 64 20 63 ...   1140                           dc.b    'Feed consumed by horses: ',0                                
00004B49= 4E 75 6D 62 65 72 ...   1141  your_gold_msg:           dc.b    'Number of gold you have is: ',0
00004B66= 4E 75 6D 62 65 72 ...   1142  your_feed_msg:           dc.b    'Number of feed you have is: ',0
00004B83= 4E 75 6D 62 65 72 ...   1143  your_stable_boy_msg:     dc.b    'Number of stable boys you have is: ',0
00004BA7= 4E 75 6D 62 65 72 ...   1144  your_soldier_msg:        dc.b    'Number of soldiers you have is: ',0
00004BC8= 59 6F 75 20 64 6F ...   1145  not_enough_gold_msg:     dc.b    'You do not have enough gold to do that! Try a diffrent amount...'
00004C08= 0D 0A 00                1146                           dc.b    $0D,$0A,0
00004C0B= 59 6F 75 20 68 61 ...   1147  castle_victory_msg:      dc.b    'You have conquered the castle: ',0
00004C2B= 4E 75 6D 62 65 72 ...   1148  horses_msg:              dc.b    'Number of horses you have is: ',0
00004C4A= 41 64 64 20 47 61 ...   1149  gameplay_msg:            dc.b    'Add Gameplay !',0
00004C59= 55 70 64 61 74 65 ...   1150  update_msg:              dc.b    'Update Gameplay !',0
00004C6B= 44 72 61 77 20 53 ...   1151  draw_msg:                dc.b    'Draw Screen !',0
00004C79= 53 74 72 69 6B 65 ...   1152  hit_msg:                 dc.b    'Strike!',0
00004C81= 4D 69 73 73 21 00       1153  miss_msg:                dc.b    'Miss!',0
00004C87= 2E 00                   1154  loop_msg:                dc.b    '.',0
00004C89= 59 6F 75 20 68 61 ...   1155  replay_msg:              dc.b    'You have been defeated during your siege'
00004CB1= 0D 0A                   1156                           dc.b    $0D,$0A
00004CB3= 45 6E 74 65 72 20 ...   1157                           dc.b    'Enter 0 to quit any other number to replay: ',0
00004CE0= 59 6F 75 72 20 73 ...   1158  score_msg:               dc.b    'Your score is: ',0
00004CF0                          1159  
00004CF0                          1160  feed_stored:            ds.w    1
00004CF2                          1161  soldiers_stored:        ds.w    1
00004CF4                          1162  stable_boys_stored:     ds.w    1
00004CF6                          1163  horses_stored:          ds.w    1
00004CF8                          1164  money:                  ds.w    1
00004CFA                          1165  distance_to_castle:     ds.w    1
00004CFC                          1166  journey_cost:           ds.w    1
00004CFE                          1167  score:                  ds.w    1 
00004D00                          1168  difficulty_level:       ds.w    1   the current difficulty level multiplier
00004D02                          1169  castle_defence_left:    ds.w    1   the defence left of the castle being attacked by the player
00004D04                          1170  castle_defenders_left:  ds.w    1   the defenders left in the castle being attacked by the player
00004D06                          1171  siege_current_day:      ds.w    1   the current day of the siege
00004D08                          1172  random_number:          ds.w    1   random number that has been generated
00004D0A                          1173  random_number_max:      ds.w    1   max size of the random number we want to generate
00004D0C                          1174  total_plundered_gold:   ds.w    1   the total gold the player has plundered today
00004D0E                          1175  total_plundered_feed:   ds.w    1   the total feed the player has plundered today
00004D10                          1176  castle_defence_north:   ds.w    1
00004D12                          1177  castle_defenders_north: ds.w    1
00004D14                          1178  castle_distance_north:  ds.w    1
00004D16                          1179  castle_defence_east:    ds.w    1
00004D18                          1180  castle_defenders_east:  ds.w    1
00004D1A                          1181  castle_distance_east:   ds.w    1
00004D1C                          1182  units_attacking:        ds.w    1
00004D1E                          1183  soldiers_killed:        ds.w    1
00004D20                          1184  horses_killed:          ds.w    1
00004D22                          1185  defenders_killed:       ds.w    1
00004D24                          1186  defence_destroyed:      ds.w    1
00004D26                          1187  
00004D26                          1188  
00004D26                          1189      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ARMOURY             367C
ARMOURY_BUY         3698
ARMOURY_BUY_MSG     43AE
ARMOURY_INVALID_GOLD  36DE
ARMOURY_MSG         42BE
ARMOURY_OUT_OF_RANGE  36E6
BONUS_GOLD_FOR_CASTLE  1F4
CASTLE_CHARGE_MSG   486B
CASTLE_DEFENCE_EAST  4D16
CASTLE_DEFENCE_LEFT  4D02
CASTLE_DEFENCE_MSG  46FC
CASTLE_DEFENCE_NORTH  4D10
CASTLE_DEFENDERS_EAST  4D18
CASTLE_DEFENDERS_LEFT  4D04
CASTLE_DEFENDERS_MSG  4726
CASTLE_DEFENDERS_NORTH  4D12
CASTLE_DISTANCE_EAST  4D1A
CASTLE_DISTANCE_NORTH  4D14
CASTLE_FLANK_MSG    48FB
CASTLE_PATHS_MSG    475C
CASTLE_PLUNDER_MSG  498A
CASTLE_SIEGE_BOUNDRY_ERROR  345A
CASTLE_SIEGE_CHARGE  31B6
CASTLE_SIEGE_DAY    310A
CASTLE_SIEGE_DAY_MSG  46C9
CASTLE_SIEGE_FLANK  3208
CASTLE_SIEGE_INTRO  30EA
CASTLE_SIEGE_LOSS_GAIN  32F8
CASTLE_SIEGE_NOT_ENOUGH_HORSES  3422
CASTLE_SIEGE_NOT_ENOUGH_KNIGHTS  343E
CASTLE_SIEGE_PATHS  317C
CASTLE_SIEGE_PATH_INVALID  31A6
CASTLE_SIEGE_PLUNDER  325A
CASTLE_SIEGE_VICTORY  32AC
CASTLE_VICTORY_MSG  4C0B
CHARGE_KILL_DEFENDER  3B48
CHARGE_KILL_HORSE   3B5C
CHARGE_KILL_KNIGHT  3B52
CHARGE_LOOP         3AD4
CHARGE_LOOP_NEXT    3AEA
CHARGE_LOOP_NEXT2   3B04
CHARGE_LOOP_NEXT3   3B0E
CHARGE_LOOP_NEXT4   3B28
CHARGE_LOOP_NEXT5   3B42
CLEAR_SCREEN        3C40
CRLF                3C96
DECORATE            3C22
DEFENCE_DESTROYED   4D24
DEFENCE_DESTROYED_MSG  4AF1
DEFENDERS_KILLED    4D22
DEFENDER_CHANCE_HIGH  32
DEFENDER_CHANCE_LOW  19
DIFFICULTY_LEVEL    4D00
DISTANCE_MULTIPLIER  32
DISTANCE_TO_CASTLE  4CFA
DRAW_MSG            4C6B
END                 30C8
ENDL                3C80
ERROR_INPUT_BOUNDRY_MSG  3CB7
ERROR_MSG           3C99
EXCEEDED_INPUT_BOUNDRY  3902
EXIT                0
FARM                34EC
FARM_BUY            3508
FARM_BUY_MSG        4014
FARM_ERROR          3538
FARM_MSG            3F0B
FARM_OUT_OF_RANGE   3558
FARM_SUCCESS        3540
FEED_GAINED_MSG     4B1A
FEED_LOST_MSG       4B2D
FEED_STORED         4CF0
FLANK_KILL_DEFENDER  3AB6
FLANK_KILL_HORSE    3ACA
FLANK_KILL_KNIGHT   3AC0
FLANK_LOOP          3A40
FLANK_LOOP_NEXT     3A56
FLANK_LOOP_NEXT2    3A70
FLANK_LOOP_NEXT3    3A7C
FLANK_LOOP_NEXT4    3A96
FLANK_LOOP_NEXT5    3AB0
GAME                30B4
GAMEPLAY_MSG        4C4A
GENERATE_CASTLE_EAST  305A
GENERATE_CASTLE_NORTH  3000
GOLD_GAINED_MSG     4B07
HEAD_OUT            36EE
HEAD_OUT_CONFIRM_MSG  4690
HEAD_OUT_COST_MSG   45A6
HEAD_OUT_DEFENCE_MSG  455A
HEAD_OUT_DEFENDERS_MSG  457A
HEAD_OUT_DISTANCE_MSG  4539
HEAD_OUT_EAST_MSG   44F0
HEAD_OUT_MSG        440C
HEAD_OUT_NORTH_MSG  4514
HEAD_OUT_PATHS      370A
HEAD_OUT_PATHS_MSG  44A7
HEAD_OUT_PATH_1     3744
HEAD_OUT_PATH_2     381A
HEAD_OUT_PATH_3     38F0
HEAD_OUT_PATH_INVALID  3734
HEAD_OUT_WARNING_MSG  45D3
HIT_MSG             4C79
HORSES_KILLED       4D20
HORSES_MSG          4C2B
HORSES_STORED       4CF6
HORSE_CHANCE_HIGH   19
HORSE_CHANCE_LOW    F
HORSE_CHANCE_MEDIUM  14
HORSE_COST          14
JOURNEY_CONTINUE_1  3922
JOURNEY_CONTINUE_2  3932
JOURNEY_CONTINUE_3  3942
JOURNEY_COST        4CFC
JOURNEY_LOSS        3912
JOURNEY_RECALCULATE_1  395E
JOURNEY_RECALCULATE_2  397E
JOURNEY_RECALCULATE_3  398E
KILLED_DEFENDERS_MSG  4ADC
KILLED_HORSES_MSG   4ABD
KILLED_SOLDIERS_MSG  4ACB
LOOP                3C0E
LOOP_MSG            4C87
MARKET              346E
MARKET_MSG          3DDB
MARKET_PATH_1       34CC
MARKET_PATH_2       34D2
MARKET_PATH_3       34E0
MARKET_PATH_4       34E6
MARKET_PATH_INVALID  34BC
MARKET_PATH_MSG     3EC0
MARKET_PATH_OPTIONS  348A
MAX_INPUT_VALUE     64
MIN_HORSES          1
MIN_INPUT_VALUE     0
MISS_MSG            4C81
MONEY               4CF8
NEXT                3C12
NOT_ENOUGH_GOLD     38F4
NOT_ENOUGH_GOLD_MSG  4BC8
NOT_ENOUGH_HORSES_MSG  4A6A
NOT_ENOUGH_KNIGHTS_MSG  4A93
OATS_PER_FIFTY_KM   64
OATS_PER_GOLD       14
OATS_PER_SIEGE_DAY  32
OUT                 3C2A
PLAYER_STATS        39C4
PLUNDER_CHANCE      19
PLUNDER_FEED_RANGE  64
PLUNDER_GOLD_RANGE  2D
PLUNDER_KILL_HORSE  3C04
PLUNDER_KILL_KNIGHT  3BFA
PLUNDER_LOOP        3B66
PLUNDER_LOOP_NEXT   3B6C
PLUNDER_LOOP_NEXT2  3B86
PLUNDER_LOOP_NEXT3  3B90
PLUNDER_LOOP_NEXT4  3BAA
PLUNDER_LOOP_NEXT5  3BC4
PLUNDER_RESOURCE    3BCA
RANDOM_NUMBER       4D08
RANDOM_NUMBER_GEN   3998
RANDOM_NUMBER_MAX   4D0A
REPLAY              3C4C
REPLAY_MSG          4C89
SCORE               4CFE
SCORE_FOR_CASTLE    3E8
SCORE_MSG           4CE0
SIEGE_CURRENT_DAY   4D06
SOLDIERS_KILLED     4D1E
SOLDIERS_STORED     4CF2
SOLDIER_CHANCE_HIGH  14
SOLDIER_CHANCE_LOW  A
SOLDIER_CHANCE_MEDIUM  F
SOLDIER_COST        14
STABLES             3560
STABLES_BOY_MSG     41E3
STABLES_HORSE_MSG   415E
STABLES_INVALID_GOLD  365C
STABLES_INVALID_PATH  359E
STABLES_OUT_OF_RANGE  366C
STABLES_PATH_1      35AE
STABLES_PATH_2      3602
STABLES_PATH_3      3658
STABLES_PATH_OPTIONS  3574
STABLE_BOYS_STORED  4CF4
STABLE_BOY_COST     A
STABLE_MSG          4067
STABLE_PATH_MSG     4277
START               1000
STARTING_GOLD       12C
TOTAL_PLUNDERED_FEED  4D0E
TOTAL_PLUNDERED_GOLD  4D0C
UNITS_ATTACKING     4D1C
UPDATE_MSG          4C59
WELCOME             30CC
WELCOME_MSG         3D39
YOUR_FEED_MSG       4B66
YOUR_GOLD_MSG       4B49
YOUR_SOLDIER_MSG    4BA7
YOUR_STABLE_BOY_MSG  4B83
